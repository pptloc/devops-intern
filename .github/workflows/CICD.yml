name: CI/CD - ASP.NET App

on:
  push:
    branches:
      - dev
      - staging
      - main
  pull_request:
    branches:
      - dev
      - staging
      - main

env:
  DOCKER_REPO: pptloc/aspnetapp

jobs:
  setup-env:
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.setenv.outputs.env_name }}
      image_tag: ${{ steps.setenv.outputs.image_tag }}
    steps:
      - id: setenv
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "env_name=production" >> $GITHUB_OUTPUT
            echo "image_tag=latest" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF##*/}" == "staging" ]]; then
            echo "env_name=staging" >> $GITHUB_OUTPUT
            echo "image_tag=staging" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF##*/}" == "dev" ]]; then
            echo "env_name=development" >> $GITHUB_OUTPUT
            echo "image_tag=dev" >> $GITHUB_OUTPUT
          else
            echo "env_name=feature" >> $GITHUB_OUTPUT
            echo "image_tag=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
          fi

  build-and-test:
    needs: setup-env
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore
        run: dotnet restore ./aspnet/aspnetapp/aspnetapp.sln

      - name: Build
        run: dotnet build ./aspnet/aspnetapp/aspnetapp.sln --no-restore

      - name: Test
        run: dotnet test ./aspnet/aspnetapp/aspnetapp.sln --no-build

  docker-deploy:
    needs: [setup-env, build-and-test]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t $DOCKER_REPO:${{ needs.setup-env.outputs.image_tag }} -f aspnet/Dockerfile aspnet/

      - name: Push Docker image
        run: |
          docker push $DOCKER_REPO:${{ needs.setup-env.outputs.image_tag }}

  deploy-to-vm:
    needs: [setup-env, docker-deploy]
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.setup-env.outputs.env_name }}

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AZURE_HOST }}
          username: ${{ secrets.AZURE_USERNAME }}
          key: ${{ secrets.AZURE_SSH_KEY }}
          script: |
            docker pull $DOCKER_REPO:${{ needs.setup-env.outputs.image_tag }}
            docker stop aspnetapp || true
            docker rm aspnetapp || true
            docker run -d --name aspnetapp -p 80:8080 $DOCKER_REPO:${{ needs.setup-env.outputs.image_tag }}
