name: CI/CD - ASP.NET App

on:
  push:
    branches: [main, staging, dev]
  pull_request:
    branches: [main, staging, dev]

env:
  DOCKER_REPO: pptloc/aspnetapp

jobs:
  setup-env:
    runs-on: ubuntu-latest
    outputs:
      ENV_NAME: ${{ steps.export-vars.outputs.env_name }}
      IMAGE_TAG: ${{ steps.export-vars.outputs.image_tag }}

    steps:
      - name: Determine Environment and Image Tag
        id: export-vars
        run: |
          BRANCH_NAME="${GITHUB_REF##*/}"

          if [[ "$BRANCH_NAME" == "main" ]]; then
            ENV_NAME="production"
            IMAGE_TAG="latest"
          elif [[ "$BRANCH_NAME" == "staging" ]]; then
            ENV_NAME="staging"
            IMAGE_TAG="staging"
          elif [[ "$BRANCH_NAME" == "dev" ]]; then
            ENV_NAME="development"
            IMAGE_TAG="dev"
          else
            ENV_NAME="feature"
            IMAGE_TAG="$BRANCH_NAME"
          fi

          echo "env_name=$ENV_NAME" >> $GITHUB_OUTPUT
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

  build-and-test:
    needs: setup-env
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore Dependencies
        run: dotnet restore ./aspnet/aspnetapp/aspnetapp.sln

      - name: Build Solution
        run: dotnet build ./aspnet/aspnetapp/aspnetapp.sln --no-restore

      - name: Run Tests
        run: dotnet test ./aspnet/aspnetapp/aspnetapp.sln --no-build

  docker-build-and-push:
    needs: [setup-env, build-and-test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          docker build -t $DOCKER_REPO:${{ needs.setup-env.outputs.IMAGE_TAG }} -f aspnet/Dockerfile aspnet/

      - name: Push Docker Image
        run: |
          docker push $DOCKER_REPO:${{ needs.setup-env.outputs.IMAGE_TAG }}

  deploy-to-vm:
    needs: [setup-env, docker-build-and-push]
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.setup-env.outputs.ENV_NAME }}

    steps:
      - name: Deploy to Azure VM via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AZURE_HOST }}
          username: ${{ secrets.AZURE_USERNAME }}
          key: ${{ secrets.AZURE_SSH_KEY }}
          script: |
            docker pull $DOCKER_REPO:${{ needs.setup-env.outputs.IMAGE_TAG }}
            docker stop aspnetapp || true
            docker rm aspnetapp || true
            docker run -d --name aspnetapp -p 80:8080 $DOCKER_REPO:${{ needs.setup-env.outputs.IMAGE_TAG }}
