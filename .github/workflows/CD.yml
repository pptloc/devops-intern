name: CD - Deploy ASP.NET App

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Tag of Docker image to deploy'
        required: true
      environment:
        description: 'Target environment'
        required: true

env:
  DOCKER_REPO: pptloc/aspnetapp

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.export_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set image tag
        id: export_tag
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "tag=${{ github.event.inputs.image_tag }}" >> $GITHUB_OUTPUT
            echo "TAG=${{ github.event.inputs.image_tag }}" >> $GITHUB_ENV
          else
            TAG="${GITHUB_REF##*/}"
            echo "tag=$TAG" >> $GITHUB_OUTPUT
            echo "TAG=$TAG" >> $GITHUB_ENV
          fi

      - name: Build & Push Docker Image
        run: |
          docker build -t $DOCKER_REPO:$TAG -f aspnet/Dockerfile aspnet/
          docker push $DOCKER_REPO:$TAG

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build-push
    steps:
      - name: Set environment variables
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "TAG=${{ github.event.inputs.image_tag }}" >> $GITHUB_ENV
            echo "ENV=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          else
            TAG="${GITHUB_REF##*/}"
            echo "TAG=$TAG" >> $GITHUB_ENV
            echo "ENV=production" >> $GITHUB_ENV
          fi

      - name: Validate image tag
        run: |
          if [[ ! "$TAG" =~ ^[0-9]+\.[0-9]+\.[0-9]+-(dev|staging|main)-(d|s|p)-[a-f0-9]{8}$ ]]; then
            echo "::error::‚ùå Invalid image tag format: $TAG"
            exit 1
          fi

      - name: SSH Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AZURE_HOST }}
          username: ${{ secrets.AZURE_USERNAME }}
          key: ${{ secrets.AZURE_SSH_KEY }}
          script: |
            IMAGE="$DOCKER_REPO:$TAG"
            echo "üöÄ Deploying image: $IMAGE"
            docker pull $IMAGE
            docker stop aspnetapp || true
            docker rm aspnetapp || true
            docker run -d \
              --name aspnetapp \
              -p 80:8080 \
              $IMAGE
