name: CI - ASP.NET App

on:
  push:
    branches: [main, staging, dev]
  pull_request:
    branches: [main, staging, dev]

env:
  DOCKER_REPO: pptloc/aspnetapp
  VERSION: 0.1.0

jobs:
  # 1. PR Lint: check title
  pr-lint:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Validate PR title naming convention
        run: |
          TITLE="${{ github.event.pull_request.title }}"
          echo "PR TITLE: $TITLE"

          if [[ ! "$TITLE" =~ ^(feat|fix|chore|refactor|docs|test)/.+$ ]]; then
            echo "::error::❌ Invalid PR title. Must start with feat/, fix/, etc."
            exit 1
          fi

  # 2. Setup env & image tag
  setup-env:
    needs: pr-lint
    runs-on: ubuntu-latest
    outputs:
      ENV_NAME: ${{ steps.vars.outputs.env_name }}
      IMAGE_TAG: ${{ steps.vars.outputs.image_tag }}

    steps:
      - name: Determine Environment and Image Tag
        id: vars
        run: |
          BRANCH_NAME="${GITHUB_HEAD_REF:-${GITHUB_REF##*/}}"

          if [[ "$BRANCH_NAME" == "main" ]]; then
            ENV_NAME="production"
            SUFFIX="p"
          elif [[ "$BRANCH_NAME" == "staging" ]]; then
            ENV_NAME="staging"
            SUFFIX="s"
          elif [[ "$BRANCH_NAME" == "dev" ]]; then
            ENV_NAME="development"
            SUFFIX="d"
          else
            echo "::error::❌ Unsupported branch: $BRANCH_NAME"
            exit 1
          fi

          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-8)
          IMAGE_TAG="${VERSION}-${BRANCH_NAME}-${SUFFIX}-${SHORT_SHA}"

          echo "env_name=$ENV_NAME" >> $GITHUB_OUTPUT
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

  # 3. Build & test .NET app
  build-and-test:
    needs: setup-env
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore ./aspnet/aspnetapp/aspnetapp.sln

      - name: Build solution
        run: dotnet build ./aspnet/aspnetapp/aspnetapp.sln --no-restore

      - name: Run tests
        run: dotnet test ./aspnet/aspnetapp/aspnetapp.sln --no-build

  # 4. Build docker image & push
  docker-build-and-push:
    needs: [setup-env, build-and-test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build \
            -t $DOCKER_REPO:${{ needs.setup-env.outputs.image_tag }} \
            --label "env=${{ needs.setup-env.outputs.ENV_NAME }}" \
            --label "version=${{ env.VERSION }}" \
            --label "commit=${{ github.sha }}" \
            -f aspnet/Dockerfile aspnet/

      - name: Push Docker image
        run: |
          docker push $DOCKER_REPO:${{ needs.setup-env.outputs.image_tag }}
